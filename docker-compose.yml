version: "3.4"
services:

  backend:
    build:
      context: ./backend
    env_file:
      - .env
    command: /app/start.sh
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - django_static:/app/static
      - django_media:/app/media

  db:
    image: postgres:15.3
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d COURSE"]
      interval: 5s
      timeout: 5s
      retries: 5

#  adminer:
#    depends_on:
#      - db
#    image: adminer
#    restart: unless-stopped
#    ports:
#      - "8080:8080"

  frontend:
    build:
      context: ./frontend
    volumes:
      - react_build:/react/build
    env_file:
      - .env

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
      - django_static:/usr/share/nginx/html/static/
      - django_media:/usr/share/nginx/html/media/
    ports:
      - "80:8080"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data_volume:
  react_build:
  django_static:
  django_media:
